name: "Deploy DBT Project to Fabric"

on:
  push:
    branches:
      - main
      - feature/*
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      # Install ODBC Driver 17
      - name: Install ODBC Driver 17 for SQL Server
        run: |
          sudo su
          # Import the public key for the Microsoft official package repository
          curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -

          # Register the Microsoft Ubuntu repository for SQL Server
          # Choose the correct distribution (e.g., Ubuntu 22.04 - jammy)
          # 'lsb_release -rs' will give you the release number like '22.04'
          # 'lsb_release -cs' will give you the codename like 'jammy'
          UBUNTU_RELEASE_CODE=$(lsb_release -cs)
          if [ "${UBUNTU_RELEASE_CODE}" = "jammy" ]; then
              echo "deb [arch=amd64,trusted=yes] https://packages.microsoft.com/ubuntu/22.04/prod ${UBUNTU_RELEASE_CODE} main" > /etc/apt/sources.list.d/mssql-release.list
          elif [ "${UBUNTU_RELEASE_CODE}" = "focal" ]; then
              echo "deb [arch=amd64,trusted=yes] https://packages.microsoft.com/ubuntu/20.04/prod ${UBUNTU_RELEASE_CODE} main" > /etc/apt/sources.list.d/mssql-release.list
          else
              echo "Unsupported Ubuntu release: ${UBUNTU_RELEASE_CODE}"
              exit 1
          fi

          # Update the list of available packages
          apt-get update

          # Install unixODBC development headers and the ODBC Driver 17
          ACCEPT_EULA=Y apt-get install -y unixodbc-dev msodbcsql17
          # Optional: install mssql-tools if you need sqlcmd or bcp utilities for debugging
          # ACCEPT_EULA=Y apt-get install -y mssql-tools
          exit

      - name: Install dbt and dependencies
        run: |
          pip install dbt-core==1.8.7 dbt-sqlserver==1.8.7

      - name: Decode base64 and create profiles.yml
        shell: bash
        run: |
          mkdir -p ~/.dbt
          echo "${{ secrets.DBT_PROFILES_YML_B64 }}" | base64 --decode > ~/.dbt/profiles.yml

      - name: Run dbt deps
        run: dbt deps --project-dir fabricdb_elt

      - name: Run dbt build
        env:
          DBT_SP_CLIENT_ID: ${{ secrets.DBT_SP_CLIENT_ID }}
          DBT_SP_CLIENT_SECRET: ${{ secrets.DBT_SP_CLIENT_SECRET }}
          DBT_SP_TENANT_ID: ${{ secrets.DBT_SP_TENANT_ID }}
        run: dbt build --project-dir fabricdb_elt --target prod